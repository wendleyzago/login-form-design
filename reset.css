/***
    A nova redefinição de CSS - versão 1.7.2 (última atualização em 23.6.2022)
    Página do GitHub: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remova todos os estilos do "User-Agent-Stylesheet", exceto a propriedade 'display'
    - A parte "símbolo *" é para resolver o bug do sprite do Firefox SVG
*/
 *:where(:not(html, iframe, canvas, img, svg, video):not(svg *, symbol *)) {
    display: revert;
}

/* Valor de tamanho de caixa preferido */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reaplica o cursor do ponteiro para tags âncora */
a, button {
    cursor: revert;
}

/* Remove estilos de lista (marcadores/números) */
ol, ul, menu {
    list-style: none;
}

/* Para que as imagens não possam exceder seu contêiner */
img {
    max-width: 100%;
}

/* remove o espaçamento entre as células nas tabelas */
table {
    border-collapse: collapse;
}

/* Safari - resolvendo problema ao usar user-select:none na entrada de texto <body> não funciona */
input, textarea {
    -webkit-user-select: auto;
}

/* reverte a propriedade 'white-space' para elementos textarea no Safari */
textarea {
    white-space: revert;
}

/* estilo mínimo para permitir estilizar o elemento do medidor */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* redefine a opacidade do texto padrão do espaço reservado de entrada */
::placeholder {
    color: unset;
}

/* corrige o recurso do atributo 'oculto'.
   display:revert; reverter para elemento em vez de atributo */
:where([hidden]) {
    display: none;
}

/* reverter para bug nos navegadores Chromium
   - correção para o atributo editável de conteúdo funcionará corretamente.
   - webkit-user-select: auto; adicionado para o Safari no caso de usar user-select:none no elemento wrapper*/
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* aplica de volta o recurso arrastável - existe apenas no Chromium e no Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}